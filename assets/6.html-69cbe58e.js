const e=JSON.parse('{"key":"v-48557a1f","path":"/posts/android/%E6%8E%A7%E4%BB%B6%E7%AF%87/6.html","title":"对话框","lang":"zh-CN","frontmatter":{"lastUpdated":true,"description":"对话框 Window App界面附着在窗口Window上。大至整个活动页面，小至Toast的提示窗，还有对话框Dialog，都建立在窗口上。如果想熟练掌握对话框，就必须先了解窗口。下面从Window的5个常用方法开始介绍。 setContentView：设置内容视图。我们每天打交道的Activity第一句就是setContentView，查看源码后发现内部原来调用了同名方法getWindow().setContentView。 setLayout：设置内容视图的宽、高尺寸。 setGravity：设置内容视图的对齐方式。 setBackgroundDrawable：设置内容视图的背景。 findViewById：根据资源ID获取该视图的对象。这个方法每个Activity代码都要用许多遍。查看Activity源码后可以发现该方法也是调用Window的同名方法getWindow().findViewById。","head":[["meta",{"property":"og:url","content":"https://eaaomk.github.io/blognext/blognext/posts/android/%E6%8E%A7%E4%BB%B6%E7%AF%87/6.html"}],["meta",{"property":"og:site_name","content":"欢迎你"}],["meta",{"property":"og:title","content":"对话框"}],["meta",{"property":"og:description","content":"对话框 Window App界面附着在窗口Window上。大至整个活动页面，小至Toast的提示窗，还有对话框Dialog，都建立在窗口上。如果想熟练掌握对话框，就必须先了解窗口。下面从Window的5个常用方法开始介绍。 setContentView：设置内容视图。我们每天打交道的Activity第一句就是setContentView，查看源码后发现内部原来调用了同名方法getWindow().setContentView。 setLayout：设置内容视图的宽、高尺寸。 setGravity：设置内容视图的对齐方式。 setBackgroundDrawable：设置内容视图的背景。 findViewById：根据资源ID获取该视图的对象。这个方法每个Activity代码都要用许多遍。查看Activity源码后可以发现该方法也是调用Window的同名方法getWindow().findViewById。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-18T09:08:08.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-18T09:08:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对话框\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-18T09:08:08.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Window","slug":"window","link":"#window","children":[]},{"level":2,"title":"AlertDialog","slug":"alertdialog","link":"#alertdialog","children":[{"level":3,"title":"创建对话框 fragment","slug":"创建对话框-fragment","link":"#创建对话框-fragment","children":[]},{"level":3,"title":"构建提醒对话框","slug":"构建提醒对话框","link":"#构建提醒对话框","children":[]},{"level":3,"title":"将事件传递回对话框的宿主","slug":"将事件传递回对话框的宿主","link":"#将事件传递回对话框的宿主","children":[]},{"level":3,"title":"显示对话框","slug":"显示对话框","link":"#显示对话框","children":[]},{"level":3,"title":"关闭对话框","slug":"关闭对话框","link":"#关闭对话框","children":[]},{"level":3,"title":"全屏显示对话框或将其显示为嵌入式 Fragment","slug":"全屏显示对话框或将其显示为嵌入式-fragment","link":"#全屏显示对话框或将其显示为嵌入式-fragment","children":[]}]},{"level":2,"title":"DatePickerDialog","slug":"datepickerdialog","link":"#datepickerdialog","children":[{"level":3,"title":"创建日期选择器","slug":"创建日期选择器","link":"#创建日期选择器","children":[]}]},{"level":2,"title":"TimePickerDialog","slug":"timepickerdialog","link":"#timepickerdialog","children":[{"level":3,"title":"创建时间选择器","slug":"创建时间选择器","link":"#创建时间选择器","children":[]}]},{"level":2,"title":"ProgressDialog","slug":"progressdialog","link":"#progressdialog","children":[]},{"level":2,"title":"自动填充框架","slug":"自动填充框架","link":"#自动填充框架","children":[]}],"git":{"createdTime":1678457949000,"updatedTime":1679130488000,"contributors":[{"name":"qiang.zhang","email":"eaaomk@163.com","commits":2}]},"readingTime":{"minutes":7.53,"words":2258},"filePathRelative":"posts/android/控件篇/6.md","localizedDate":"2023年3月10日","excerpt":"<h1> 对话框</h1>\\n<h2> Window</h2>\\n<p>App界面附着在窗口Window上。大至整个活动页面，小至Toast的提示窗，还有对话框Dialog，都建立在窗口上。如果想熟练掌握对话框，就必须先了解窗口。下面从Window的5个常用方法开始介绍。</p>\\n<div class=\\"language-markdown line-numbers-mode\\" data-ext=\\"md\\"><pre class=\\"language-markdown\\"><code>setContentView：设置内容视图。我们每天打交道的Activity第一句就是setContentView，查看源码后发现内部原来调用了同名方法getWindow().setContentView。\\nsetLayout：设置内容视图的宽、高尺寸。\\nsetGravity：设置内容视图的对齐方式。\\nsetBackgroundDrawable：设置内容视图的背景。\\nfindViewById：根据资源ID获取该视图的对象。这个方法每个Activity代码都要用许多遍。查看Activity源码后可以发现该方法也是调用Window的同名方法getWindow().findViewById。\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
