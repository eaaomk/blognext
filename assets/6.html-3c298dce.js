const t=JSON.parse('{"key":"v-13465e4a","path":"/posts/java/6.html","title":"表示层设计模式分类","lang":"zh-CN","frontmatter":{"lastUpdated":true,"description":"表示层设计模式分类 这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。 MVC模式（MVC Pattern） 业务代表模式（Business Delegate Pattern） 组合实体模式（Composite Entity Pattern） 数据访问对象模式（Data Access Object Pattern） 前端控制器模式（Front Controller Pattern） 拦截过滤器模式（Intercepting Filter Pattern）","head":[["meta",{"property":"og:url","content":"https://eaaomk.github.io/blognext/blognext/posts/java/6.html"}],["meta",{"property":"og:site_name","content":"欢迎你"}],["meta",{"property":"og:title","content":"表示层设计模式分类"}],["meta",{"property":"og:description","content":"表示层设计模式分类 这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。 MVC模式（MVC Pattern） 业务代表模式（Business Delegate Pattern） 组合实体模式（Composite Entity Pattern） 数据访问对象模式（Data Access Object Pattern） 前端控制器模式（Front Controller Pattern） 拦截过滤器模式（Intercepting Filter Pattern）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-29T13:57:58.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-29T13:57:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"表示层设计模式分类\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-29T13:57:58.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"MVC模式（MVC Pattern）","slug":"mvc模式-mvc-pattern","link":"#mvc模式-mvc-pattern","children":[]},{"level":2,"title":"业务代表模式（Business Delegate Pattern）","slug":"业务代表模式-business-delegate-pattern","link":"#业务代表模式-business-delegate-pattern","children":[]},{"level":2,"title":"组合实体模式（Composite Entity Pattern）","slug":"组合实体模式-composite-entity-pattern","link":"#组合实体模式-composite-entity-pattern","children":[]},{"level":2,"title":"数据访问对象模式（Data Access Object Pattern）","slug":"数据访问对象模式-data-access-object-pattern","link":"#数据访问对象模式-data-access-object-pattern","children":[]},{"level":2,"title":"前端控制器模式（Front Controller Pattern）","slug":"前端控制器模式-front-controller-pattern","link":"#前端控制器模式-front-controller-pattern","children":[]},{"level":2,"title":"拦截过滤器模式（Intercepting Filter Pattern）","slug":"拦截过滤器模式-intercepting-filter-pattern","link":"#拦截过滤器模式-intercepting-filter-pattern","children":[]},{"level":2,"title":"服务定位器模式（Service Locator Pattern）","slug":"服务定位器模式-service-locator-pattern","link":"#服务定位器模式-service-locator-pattern","children":[]},{"level":2,"title":"传输对象模式（Transfer Object Pattern）","slug":"传输对象模式-transfer-object-pattern","link":"#传输对象模式-transfer-object-pattern","children":[]}],"git":{"createdTime":1675000678000,"updatedTime":1675000678000,"contributors":[{"name":"qiang.zhang","email":"eaaomk@163.com","commits":1}]},"readingTime":{"minutes":0.37,"words":110},"filePathRelative":"posts/java/6.md","localizedDate":"2023年1月29日","excerpt":"<h1> 表示层设计模式分类</h1>\\n<ul>\\n<li>这些设计模式特别关注表示层。这些模式是由 Sun Java Center 鉴定的。</li>\\n</ul>\\n<h2> MVC模式（MVC Pattern）</h2>\\n<h2> 业务代表模式（Business Delegate Pattern）</h2>\\n<h2> 组合实体模式（Composite Entity Pattern）</h2>\\n<h2> 数据访问对象模式（Data Access Object Pattern）</h2>\\n<h2> 前端控制器模式（Front Controller Pattern）</h2>\\n<h2> 拦截过滤器模式（Intercepting Filter Pattern）</h2>","autoDesc":true}');export{t as data};
