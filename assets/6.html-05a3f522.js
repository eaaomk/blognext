import{_ as n,V as s,W as a,Z as t}from"./framework-bcbeea85.js";const e="/blognext/images/dialogs_regions.png",p="/blognext/images/dialog_list.png",c="/blognext/images/pickers.png",o={},i=t(`<h1 id="对话框" tabindex="-1"><a class="header-anchor" href="#对话框" aria-hidden="true">#</a> 对话框</h1><h2 id="window" tabindex="-1"><a class="header-anchor" href="#window" aria-hidden="true">#</a> Window</h2><p>App界面附着在窗口Window上。大至整个活动页面，小至Toast的提示窗，还有对话框Dialog，都建立在窗口上。如果想熟练掌握对话框，就必须先了解窗口。下面从Window的5个常用方法开始介绍。</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>setContentView：设置内容视图。我们每天打交道的Activity第一句就是setContentView，查看源码后发现内部原来调用了同名方法getWindow().setContentView。
setLayout：设置内容视图的宽、高尺寸。
setGravity：设置内容视图的对齐方式。
setBackgroundDrawable：设置内容视图的背景。
findViewById：根据资源ID获取该视图的对象。这个方法每个Activity代码都要用许多遍。查看Activity源码后可以发现该方法也是调用Window的同名方法getWindow().findViewById。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="alertdialog" tabindex="-1"><a class="header-anchor" href="#alertdialog" aria-hidden="true">#</a> AlertDialog</h2><p>对话框是提示用户做出决定或输入更多信息的小窗口。对话框不会占据整个屏幕，通常适用于需要用户进行操作才能继续执行的模态框事件。</p><p>使用 DialogFragment 来管理对话框可确保对话框能正确处理各种生命周期事件，如用户按“返回”按钮或旋转屏幕时。此外，DialogFragment 类还以可嵌入组件的形式在较大界面中重复使用对话框的界面，类似于传统的 Fragment。</p><p>下面介绍将 DialogFragment 与 AlertDialog 对象结合使用</p><h3 id="创建对话框-fragment" tabindex="-1"><a class="header-anchor" href="#创建对话框-fragment" aria-hidden="true">#</a> 创建对话框 fragment</h3><p>通过扩展 DialogFragment 并在 onCreateDialog() 回调方法中创建 AlertDialog，可以完成各种对话框设计，包括自定义布局以及对话框设计指南中描述的布局。</p><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StartGameDialogFragment</span> <span class="token keyword">extends</span> <span class="token class-name">DialogFragment</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Dialog</span> <span class="token function">onCreateDialog</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Use the Builder class for convenient dialog construction</span>
        <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        builder<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>dialog_start_game<span class="token punctuation">)</span>
               <span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>start<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                       <span class="token comment">// START THE GAME!</span>
                   <span class="token punctuation">}</span>
               <span class="token punctuation">}</span><span class="token punctuation">)</span>
               <span class="token punctuation">.</span><span class="token function">setNegativeButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>cancel<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                       <span class="token comment">// User cancelled the dialog</span>
                   <span class="token punctuation">}</span>
               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Create the AlertDialog object and return it</span>
        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>调用Show 的时候即可显示在界面上</li></ul><h3 id="构建提醒对话框" tabindex="-1"><a class="header-anchor" href="#构建提醒对话框" aria-hidden="true">#</a> 构建提醒对话框</h3><p>使用 AlertDialog 类来构建各种对话框设计。通常情况下，该类是您完成构建所需的唯一对话框类。如图所示，提醒对话框有三个区域：</p><figure><img src="`+e+`" alt="对话框的布局" tabindex="0" loading="lazy"><figcaption>对话框的布局</figcaption></figure><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>标题
此为可选项，仅当内容区域被详细消息、列表或自定义布局占据时才应使用标题。如果需要陈述的是一条简单消息或问题（如图 1 中的对话框），则不需要标题。

内容区域
内容区域可显示消息、列表或其他自定义布局。

操作按钮
对话框中的操作按钮不应超过三个。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>dialog_message<span class="token punctuation">)</span>
       <span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>dialog_title<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">AlertDialog</span> dialog <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加按钮" tabindex="-1"><a class="header-anchor" href="#添加按钮" aria-hidden="true">#</a> 添加按钮</h4><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Add the buttons</span>
builder<span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>ok<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">// User clicked OK button</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
builder<span class="token punctuation">.</span><span class="token function">setNegativeButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>cancel<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">// User cancelled the dialog</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Set other dialog properties</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

<span class="token comment">// Create the AlertDialog</span>
<span class="token class-name">AlertDialog</span> dialog <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="添加列表" tabindex="-1"><a class="header-anchor" href="#添加列表" aria-hidden="true">#</a> 添加列表</h4><figure><img src="`+p+`" alt="示例图" tabindex="0" loading="lazy"><figcaption>示例图</figcaption></figure><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Dialog</span> <span class="token function">onCreateDialog</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>pick_color<span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">setItems</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>array<span class="token punctuation">.</span>colors_array<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> which<span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token comment">// The &#39;which&#39; argument contains the index position</span>
               <span class="token comment">// of the selected item</span>
           <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建自定义布局" tabindex="-1"><a class="header-anchor" href="#创建自定义布局" aria-hidden="true">#</a> 创建自定义布局</h4><p>可以在builder 构建的时候调用 setView 方法，代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Dialog</span> <span class="token function">onCreateDialog</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AlertDialog<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Get the layout inflater</span>
    <span class="token class-name">LayoutInflater</span> inflater <span class="token operator">=</span> <span class="token function">requireActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Inflate and set the layout for the dialog</span>
    <span class="token comment">// Pass null as the parent view because its going in the dialog layout</span>
    builder<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span>inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>dialog_signin<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// Add action buttons</span>
           <span class="token punctuation">.</span><span class="token function">setPositiveButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>signin<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token annotation punctuation">@Override</span>
               <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token comment">// sign in the user ...</span>
               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span><span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">setNegativeButton</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>cancel<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">DialogInterface<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">DialogInterface</span> dialog<span class="token punctuation">,</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token class-name">LoginDialogFragment</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tip: 以对话的形式展示Dialog</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@android:style/Theme.Holo.Dialog<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="将事件传递回对话框的宿主" tabindex="-1"><a class="header-anchor" href="#将事件传递回对话框的宿主" aria-hidden="true">#</a> 将事件传递回对话框的宿主</h3><p>定义一个接口，让宿主实现这个接口即可 代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoticeDialogFragment</span> <span class="token keyword">extends</span> <span class="token class-name">DialogFragment</span> <span class="token punctuation">{</span>

    <span class="token comment">/* The activity that creates an instance of this dialog fragment must
     * implement this interface in order to receive event callbacks.
     * Each method passes the DialogFragment in case the host needs to query it. */</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NoticeDialogListener</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDialogPositiveClick</span><span class="token punctuation">(</span><span class="token class-name">DialogFragment</span> dialog<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDialogNegativeClick</span><span class="token punctuation">(</span><span class="token class-name">DialogFragment</span> dialog<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Use this instance of the interface to deliver action events</span>
    <span class="token class-name">NoticeDialogListener</span> listener<span class="token punctuation">;</span>

    <span class="token comment">// Override the Fragment.onAttach() method to instantiate the NoticeDialogListener</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAttach</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onAttach</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Verify that the host activity implements the callback interface</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// Instantiate the NoticeDialogListener so we can send events to the host</span>
            listener <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">NoticeDialogListener</span><span class="token punctuation">)</span> context<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassCastException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// The activity doesn&#39;t implement the interface, throw exception</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ClassCastException</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token operator">+</span> <span class="token string">&quot; must implement NoticeDialogListener&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示对话框" tabindex="-1"><a class="header-anchor" href="#显示对话框" aria-hidden="true">#</a> 显示对话框</h3><p>创建一个 DialogFragment 实例并调用 show()，以传递对话框 Fragment 的 FragmentManager 和标记名称。</p><p>可以从 FragmentActivity 调用 getSupportFragmentManager()</p><p>或从 Fragment 调用 getFragmentManager()，从而获取 FragmentManager。</p><p>举例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">confirmStartGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">DialogFragment</span> newFragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StartGameDialogFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    newFragment<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;game&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二个参数 &quot;game&quot; 是系统用于保存 Fragment 状态并在必要时进行恢复的唯一标记名称。该标记通过调用 findFragmentByTag() 来获取 Fragment 的句柄 意思是可以通过这个唯一标记找到这个Fragment。</p><h3 id="关闭对话框" tabindex="-1"><a class="header-anchor" href="#关闭对话框" aria-hidden="true">#</a> 关闭对话框</h3><p>通过对 DialogFragment 调用 dismiss() 来手动关闭对话框。在 DialogFragment 中实现 onDismiss() 方法。</p><h3 id="全屏显示对话框或将其显示为嵌入式-fragment" tabindex="-1"><a class="header-anchor" href="#全屏显示对话框或将其显示为嵌入式-fragment" aria-hidden="true">#</a> 全屏显示对话框或将其显示为嵌入式 Fragment</h3><p>让一部分界面在某些情况下显示为对话框，但在其他情况下全屏显示或显示为嵌入式 Fragment（可能取决于设备使用大屏幕还是小屏幕）。</p><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomDialogFragment</span> <span class="token keyword">extends</span> <span class="token class-name">DialogFragment</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/** The system calls this to get the DialogFragment&#39;s layout, regardless
        of whether it&#39;s being displayed as a dialog or an embedded fragment. */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token class-name">LayoutInflater</span> inflater<span class="token punctuation">,</span> <span class="token class-name">ViewGroup</span> container<span class="token punctuation">,</span>
            <span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Inflate the layout to use as dialog or embedded fragment</span>
        <span class="token keyword">return</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>purchase_items<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/** The system calls this only when creating the layout in a dialog. */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Dialog</span> <span class="token function">onCreateDialog</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The only reason you might override this method when using onCreateView() is</span>
        <span class="token comment">// to modify any dialog characteristics. For example, the dialog includes a</span>
        <span class="token comment">// title by default, but your custom layout might not need it. So here you can</span>
        <span class="token comment">// remove the dialog title, but you must call the superclass to get the Dialog.</span>
        <span class="token class-name">Dialog</span> dialog <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreateDialog</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        dialog<span class="token punctuation">.</span><span class="token function">requestWindowFeature</span><span class="token punctuation">(</span><span class="token class-name">Window</span><span class="token punctuation">.</span><span class="token constant">FEATURE_NO_TITLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> dialog<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，根据屏幕尺寸确定将 Fragment 显示为对话框或全屏界面：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>

<span class="token keyword">boolean</span> isLargeLayout<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

    isLargeLayout <span class="token operator">=</span> <span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>bool<span class="token punctuation">.</span>large_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">FragmentManager</span> fragmentManager <span class="token operator">=</span> <span class="token function">getSupportFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CustomDialogFragment</span> newFragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomDialogFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>isLargeLayout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// The device is using a large layout, so show the fragment as a dialog</span>
        newFragment<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>fragmentManager<span class="token punctuation">,</span> <span class="token string">&quot;dialog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// The device is smaller, so show the fragment fullscreen</span>
        <span class="token class-name">FragmentTransaction</span> transaction <span class="token operator">=</span> fragmentManager<span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// For a little polish, specify a transition animation</span>
        transaction<span class="token punctuation">.</span><span class="token function">setTransition</span><span class="token punctuation">(</span><span class="token class-name">FragmentTransaction</span><span class="token punctuation">.</span><span class="token constant">TRANSIT_FRAGMENT_OPEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// To make it fullscreen, use the &#39;content&#39; root view as the container</span>
        <span class="token comment">// for the fragment, which is always the root view for the activity</span>
        transaction<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span></span>R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">,</span> newFragment<span class="token punctuation">)</span>
                   <span class="token punctuation">.</span><span class="token function">addToBackStack</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mIsLargeLayout 布尔值 可以定义在资源里面，一个在 res/values/bools.xml，另一个在res/values-large/bools.xml 这样就能兼容不同屏幕大小的设备了</p><h2 id="datepickerdialog" tabindex="-1"><a class="header-anchor" href="#datepickerdialog" aria-hidden="true">#</a> DatePickerDialog</h2><p>Android 以可直接使用的对话框形式提供可供用户选择时间或日期的控件。 每个选择器都提供一些控件，以用于选择时间的各个部分（小时、分钟、上午/下午）或日期的各个部分（月、日、年）。使用这些选择器有助于确保用户可以选择格式正确且已根据用户所在的语言区域进行调整的有效时间或日期。</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="创建日期选择器" tabindex="-1"><a class="header-anchor" href="#创建日期选择器" aria-hidden="true">#</a> 创建日期选择器</h3><p>与上面类似，过于简单，直接展示代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DatePickerFragment</span> <span class="token keyword">extends</span> <span class="token class-name">DialogFragment</span>
                            <span class="token keyword">implements</span> <span class="token class-name">DatePickerDialog<span class="token punctuation">.</span>OnDateSetListener</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Dialog</span> <span class="token function">onCreateDialog</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Use the current date as the default date in the picker</span>
        <span class="token keyword">final</span> <span class="token class-name">Calendar</span> c <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> year <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">YEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> month <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> day <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">DAY_OF_MONTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Create a new instance of DatePickerDialog and return it</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DatePickerDialog</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDateSet</span><span class="token punctuation">(</span><span class="token class-name">DatePicker</span> view<span class="token punctuation">,</span> <span class="token keyword">int</span> year<span class="token punctuation">,</span> <span class="token keyword">int</span> month<span class="token punctuation">,</span> <span class="token keyword">int</span> day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Do something with the date chosen by the user</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="timepickerdialog" tabindex="-1"><a class="header-anchor" href="#timepickerdialog" aria-hidden="true">#</a> TimePickerDialog</h2><h3 id="创建时间选择器" tabindex="-1"><a class="header-anchor" href="#创建时间选择器" aria-hidden="true">#</a> 创建时间选择器</h3><p>使用 DialogFragment 显示 TimePickerDialog,代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TimePickerFragment</span> <span class="token keyword">extends</span> <span class="token class-name">DialogFragment</span>
                            <span class="token keyword">implements</span> <span class="token class-name">TimePickerDialog<span class="token punctuation">.</span>OnTimeSetListener</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Dialog</span> <span class="token function">onCreateDialog</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Use the current time as the default values for the picker</span>
        <span class="token keyword">final</span> <span class="token class-name">Calendar</span> c <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> hour <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">HOUR_OF_DAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> minute <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Calendar</span><span class="token punctuation">.</span><span class="token constant">MINUTE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Create a new instance of TimePickerDialog and return it</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TimePickerDialog</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">,</span>
                <span class="token class-name">DateFormat</span><span class="token punctuation">.</span><span class="token function">is24HourFormat</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onTimeSet</span><span class="token punctuation">(</span><span class="token class-name">TimePicker</span> view<span class="token punctuation">,</span> <span class="token keyword">int</span> hourOfDay<span class="token punctuation">,</span> <span class="token keyword">int</span> minute<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Do something with the time chosen by the user</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="progressdialog" tabindex="-1"><a class="header-anchor" href="#progressdialog" aria-hidden="true">#</a> ProgressDialog</h2><p>该类可显示带有进度条的对话框。此 widget 已弃用，因为它会在显示进度时阻止用户与应用进行互动。如果需要指示加载进度或不确定的进度，应遵循进度和 Activity 的设计准则，并在布局中使用 ProgressBar，而非 ProgressDialog。</p><h2 id="自动填充框架" tabindex="-1"><a class="header-anchor" href="#自动填充框架" aria-hidden="true">#</a> 自动填充框架</h2><p>这里不做解读，后续看是否需要再另行开章写，简要提一些步骤。</p><p>创建 EditText 的一个子类，该子类可以处理 AUTOFILL_TYPE_DATE 类型的值：</p><ol><li>创建一个继承自 EditText 的类。</li><li>实现 getAutofillType() 方法，该方法应返回 AUTOFILL_TYPE_DATE。</li><li>实现 getAutofillValue() 方法，该方法应返回表示日期（以毫秒为单位）的 AutofillValue 对象。如需创建返回对象，请使用 forDate() 方法生成 AutofillValue 对象。</li><li>实现 autofill() 方法。此方法提供了用于处理 AutofillValue 参数（类型为 AUTOFILL_TYPE_DATE）的逻辑。如需处理该参数，请为其创建适当的字符串表示形式，如 mm/yyyy。使用字符串表示形式来设置视图的 text 属性。</li><li>实现以下功能：当用户想要在 EditText 的自定义子类中修改日期时，显示选择器。该视图应根据用户在选择器中选择的值的字符串表示形式来更新 text 属性。</li></ol>`,66),l=[i];function u(k,d){return s(),a("div",null,l)}const m=n(o,[["render",u],["__file","6.html.vue"]]);export{m as default};
