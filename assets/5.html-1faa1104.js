import{_ as n,V as a,W as s,Z as t}from"./framework-bcbeea85.js";const e="/blognext/images/notification-callouts_2x.png",i="/blognext/images/reply-button_2x.png",o="/blognext/images/notification-progressbar_2x.png",p={},c=t('<h1 id="提醒通知" tabindex="-1"><a class="header-anchor" href="#提醒通知" aria-hidden="true">#</a> 提醒通知</h1><h2 id="通知剖析" tabindex="-1"><a class="header-anchor" href="#通知剖析" aria-hidden="true">#</a> 通知剖析</h2><p>通知的设计由系统模板决定，我们的应用只需要定义模板中各个部分的内容即可。通知的部分详情仅在展开后的视图中显示。</p><figure><img src="'+e+`" alt="包含基本详情的通知" tabindex="0" loading="lazy"><figcaption>包含基本详情的通知</figcaption></figure><p>图中展示了通知最常见的部分，具体如下所示：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>小图标：必须提供，通过 setSmallIcon() 进行设置。
应用名称：由系统提供。
时间戳：由系统提供，但我们可以使用 setWhen() 替换它或者使用 setShowWhen(false) 隐藏它。
大图标：可选内容（通常仅用于联系人照片，勿将其用于应用图标），通过 setLargeIcon() 进行设置。
标题：可选内容，通过 setContentTitle() 进行设置。
文本：可选内容，通过 setContentText() 进行设置。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建自定义通知布局" tabindex="-1"><a class="header-anchor" href="#创建自定义通知布局" aria-hidden="true">#</a> 创建自定义通知布局</h2><p>使用自定义通知布局时，特别注意确保我们的自定义布局适用于不同的设备屏幕方向和分辨率。虽然对于所有界面布局，此建议都适用，但它对通知布局而言尤为重要，因为抽屉式通知栏中的空间非常有限。自定义通知布局的可用高度取决于通知视图。通常情况下，收起后的视图布局的高度上限为 64 dp，展开后的视图布局的高度上限为 256 dp。</p><h3 id="为内容区域创建自定义布局" tabindex="-1"><a class="header-anchor" href="#为内容区域创建自定义布局" aria-hidden="true">#</a> 为内容区域创建自定义布局</h3><p>如果我们需要自定义布局，可以将 NotificationCompat.DecoratedCustomViewStyle 应用于我们的通知。借助此 API，我们可以为通常由标题和文本内容占据的内容区域提供自定义布局，同时仍对通知图标、时间戳、子文本和操作按钮使用系统装饰。</p><p>该 API 的工作方式与展开式通知模板类似，都是基于基本通知布局，如下所示：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>使用 NotificationCompat.Builder 构建基本通知。
调用 setStyle()，向其传递一个 NotificationCompat.DecoratedCustomViewStyle 实例。
将自定义布局扩充为 RemoteViews 的实例。
调用 setCustomContentView() 以设置收起后通知的布局。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们还可以选择调用 setCustomBigContentView() 为展开后通知设置不同的布局。</p><ul><li>tip：如果要为媒体播放控件创建自定义通知，采纳同样的建议，但改用 NotificationCompat.DecoratedMediaCustomViewStyle 类。 例如：</li></ul><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>
    // Get the layouts to use in the custom notification
    RemoteViews notificationLayout = new RemoteViews(getPackageName(), R.layout.notification_small);
    RemoteViews notificationLayoutExpanded = new RemoteViews(getPackageName(), R.layout.notification_large);

    // Apply the layouts to the notification
    Notification customNotification = new NotificationCompat.Builder(context, CHANNEL_ID)
            .setSmallIcon(R.drawable.notification_icon)
            .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
            .setCustomContentView(notificationLayout)
            .setCustomBigContentView(notificationLayoutExpanded)
            .build();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通知的背景颜色可能会因设备和版本而异。因此，我们应始终在自定义布局中应用支持库样式，例如对文本使用 TextAppearance_Compat_Notification，对标题使用 TextAppearance_Compat_Notification_Title。这些样式会适应颜色的变化，因此不会出现黑色文本采用黑色背景或白色文本采用白色背景的情况。例如：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@string/notification_title<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/notification_title<span class="token punctuation">&quot;</span></span>
        <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@style/TextAppearance.Compat.Notification.Title<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，避免在 RemoteViews 对象上设置背景图片，因为可能会导致文本颜色无法读取。</p><h3 id="创建完全自定义的通知布局" tabindex="-1"><a class="header-anchor" href="#创建完全自定义的通知布局" aria-hidden="true">#</a> 创建完全自定义的通知布局</h3><p>如果我们不希望使用标准通知图标和标题装饰通知，按照上述步骤使用 setCustomBigContentView()，但不要调用 setStyle()。</p><ul><li>tip：建议不要使用未经装饰的通知，因为这会使通知与它的其余部分不匹配，进而导致通知在向通知区域应用了不同样式的不同设备上显示时，出现严重的布局兼容性问题。 如需支持低于 Android 4.1（API 级别 16）的 Android 版本，我们还应调用 setContent()，向其传递同一 RemoteViews 对象。</li></ul><h2 id="通知的使用和构造" tabindex="-1"><a class="header-anchor" href="#通知的使用和构造" aria-hidden="true">#</a> 通知的使用和构造</h2><h3 id="添加支持库" tabindex="-1"><a class="header-anchor" href="#添加支持库" aria-hidden="true">#</a> 添加支持库</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependencies {
        implementation &quot;com.android.support:support-compat:28.0.0&quot;
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设置通知内容" tabindex="-1"><a class="header-anchor" href="#设置通知内容" aria-hidden="true">#</a> 设置通知内容</h3><p>首先，需要使用 NotificationCompat.Builder 对象设置通知内容和渠道。以下示例显示了如何创建包含下列内容的通知：</p><div class="language-MD line-numbers-mode" data-ext="MD"><pre class="language-MD"><code>小图标，通过 setSmallIcon() 设置。这是所必需的唯一用户可见内容。
标题，通过 setContentTitle() 设置。
正文文本，通过 setContentText() 设置。
通知优先级，通过 setPriority() 设置。优先级确定通知在 Android 7.1 和更低版本上的干扰程度。（对于 Android 8.0 和更高版本，必须设置渠道重要性，如下一节中所示。）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>NotificationCompat.Builder builder = new NotificationCompat.Builder(this, CHANNEL_ID)
    .setSmallIcon(R.drawable.notification_icon)
    .setContentTitle(textTitle)
    .setContentText(textContent)
    .setPriority(NotificationCompat.PRIORITY_DEFAULT);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>NotificationCompat.Builder 构造函数要求提供渠道 ID。这是兼容 Android 8.0（API 级别 26）及更高版本所必需的，但会被较旧版本忽略。</p><p>默认情况下，通知的文本内容会被截断以放在一行。如果想要更长的通知，可以使用 setStyle() 添加样式模板来启用可展开的通知。例如，以下代码会创建更大的文本区域：</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>
    NotificationCompat.Builder builder = new NotificationCompat.Builder(this, CHANNEL_ID)
            .setSmallIcon(R.drawable.notification_icon)
            .setContentTitle(&quot;My notification&quot;)
            .setContentText(&quot;Much longer text that cannot fit one line...&quot;)
            .setStyle(new NotificationCompat.BigTextStyle()
                    .bigText(&quot;Much longer text that cannot fit one line...&quot;))
            .setPriority(NotificationCompat.PRIORITY_DEFAULT);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tip:扩展知识点-包含可展开详情的通知</li></ul><h3 id="创建渠道并设置重要性" tabindex="-1"><a class="header-anchor" href="#创建渠道并设置重要性" aria-hidden="true">#</a> 创建渠道并设置重要性</h3><p>必须先通过向 createNotificationChannel() 传递 NotificationChannel 的实例在系统中注册应用的通知渠道，然后才能在 Android 8.0 及更高版本上提供通知。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createNotificationChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Create the NotificationChannel, but only on API 26+ because</span>
        <span class="token comment">// the NotificationChannel class is new and not in the support library</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span> <span class="token operator">&gt;=</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>O</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">CharSequence</span> name <span class="token operator">=</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>channel_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> description <span class="token operator">=</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>channel_description<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> importance <span class="token operator">=</span> <span class="token class-name">NotificationManager</span><span class="token punctuation">.</span><span class="token constant">IMPORTANCE_DEFAULT</span><span class="token punctuation">;</span>
            <span class="token class-name">NotificationChannel</span> channel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationChannel</span><span class="token punctuation">(</span><span class="token constant">CHANNEL_ID</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> importance<span class="token punctuation">)</span><span class="token punctuation">;</span>
            channel<span class="token punctuation">.</span><span class="token function">setDescription</span><span class="token punctuation">(</span>description<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Register the channel with the system; you can&#39;t change the importance</span>
            <span class="token comment">// or other notification behaviors after this</span>
            <span class="token class-name">NotificationManager</span> notificationManager <span class="token operator">=</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span><span class="token class-name">NotificationManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            notificationManager<span class="token punctuation">.</span><span class="token function">createNotificationChannel</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在应用启动时立即执行这段代码。反复调用这段代码是安全的，因为创建现有通知渠道不会执行任何操作。</p><ul><li>通知重要性级别：</li></ul><table><thead><tr><th>用户可见的重要性级别</th><th>重要性（Android 8.0 及更高版本）</th><th>优先级（Android 7.1 及更低版本）</th></tr></thead><tbody><tr><td>紧急：发出提示音，并以浮动通知的形式显示</td><td>IMPORTANCE_HIGH</td><td>PRIORITY_HIGH 或 PRIORITY_MAX</td></tr><tr><td>高：发出提示音</td><td>IMPORTANCE_DEFAULT</td><td>PRIORITY_DEFAULT</td></tr><tr><td>中：无提示音</td><td>IMPORTANCE_LOW</td><td>PRIORITY_LOW</td></tr><tr><td>低：无提示音，且不会在状态栏中显示。</td><td>IMPORTANCE_MIN</td><td>PRIORITY_MIN</td></tr></tbody></table><h3 id="设置通知的点按操作" tabindex="-1"><a class="header-anchor" href="#设置通知的点按操作" aria-hidden="true">#</a> 设置通知的点按操作</h3><p>示例,以下代码段展示了如何创建基本 Intent，以在用户点按通知时打开 Activity：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">// Create an explicit intent for an Activity in your app</span>
    <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">AlertDetails</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    intent<span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">FLAG_ACTIVITY_NEW_TASK</span> <span class="token operator">|</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">FLAG_ACTIVITY_CLEAR_TASK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PendingIntent</span> pendingIntent <span class="token operator">=</span> <span class="token class-name">PendingIntent</span><span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> intent<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CHANNEL_ID</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>notification_icon<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">&quot;My notification&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">PRIORITY_DEFAULT</span><span class="token punctuation">)</span>
            <span class="token comment">// Set the intent that will fire when the user taps the notification</span>
            <span class="token punctuation">.</span><span class="token function">setContentIntent</span><span class="token punctuation">(</span>pendingIntent<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setAutoCancel</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 用户点击后自动移除通知</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示通知" tabindex="-1"><a class="header-anchor" href="#显示通知" aria-hidden="true">#</a> 显示通知</h3><p>如需显示通知，调用NotificationManagerCompat.notify()</p><p>并将通知的唯一ID和NotificationCompat.Builder.build() 的结果传递给它。</p><p>例如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token class-name">NotificationManagerCompat</span> notificationManager <span class="token operator">=</span> <span class="token class-name">NotificationManagerCompat</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// notificationId is a unique int for each notification that you must define</span>
    notificationManager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span>notificationId<span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>保存传递到 NotificationManagerCompat.notify() 的通知 ID，因为如果之后想要更新或移除通知，将需要使用这个 ID。</p><h3 id="更新通知" tabindex="-1"><a class="header-anchor" href="#更新通知" aria-hidden="true">#</a> 更新通知</h3><p>如需在发出此通知后对其进行更新，再次调用 NotificationManagerCompat.notify()，并将之前使用的具有同一 ID 的通知传递给该方法。如果之前的通知已被关闭，则系统会创建一个新通知。</p><p>可以选择性调用 setOnlyAlertOnce()，这样通知只会在通知首次出现时打断用户（通过声音、振动或视觉提示），而之后更新则不会再打断用户。</p><ul><li>Android 会在更新通知时应用速率限制。如果过于频繁地发布对某条通知的更新（不到一秒内发布多条通知），系统可能会丢弃部分更新。</li></ul><h3 id="移除通知" tabindex="-1"><a class="header-anchor" href="#移除通知" aria-hidden="true">#</a> 移除通知</h3><p>除非发生以下情况之一，否则通知仍然可见：</p><ol><li>用户关闭通知。</li><li>用户点击通知，且在创建通知时调用了 setAutoCancel()。</li><li>针对特定的通知 ID 调用了 cancel()。此方法还会删除当前通知。</li><li>调用了 cancelAll() 方法，该方法将移除之前发出的所有通知。</li><li>如果在创建通知时使用 setTimeoutAfter() 设置了超时，系统会在指定持续时间过后取消通知。也可以在指定的超时持续时间过去之前取消通知。</li></ol><h3 id="添加操作按钮" tabindex="-1"><a class="header-anchor" href="#添加操作按钮" aria-hidden="true">#</a> 添加操作按钮</h3><p>添加操作按钮，将 PendingIntent 传递给 addAction() 方法。这就像在设置通知的默认点按操作，不同的是不会启动 Activity，而是可以完成各种其他任务，例如启动在后台执行作业的 BroadcastReceiver，这样该操作就不会干扰已经打开的应用。</p><p>示例，以下代码演示了如何向特定接收者发送广播：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token class-name">Intent</span> snoozeIntent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">MyBroadcastReceiver</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    snoozeIntent<span class="token punctuation">.</span><span class="token function">setAction</span><span class="token punctuation">(</span><span class="token constant">ACTION_SNOOZE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    snoozeIntent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token constant">EXTRA_NOTIFICATION_ID</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PendingIntent</span> snoozePendingIntent <span class="token operator">=</span>
            <span class="token class-name">PendingIntent</span><span class="token punctuation">.</span><span class="token function">getBroadcast</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> snoozeIntent<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CHANNEL_ID</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>notification_icon<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">&quot;My notification&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">PRIORITY_DEFAULT</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentIntent</span><span class="token punctuation">(</span>pendingIntent<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_snooze<span class="token punctuation">,</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>snooze<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    snoozePendingIntent<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加直接回复操作" tabindex="-1"><a class="header-anchor" href="#添加直接回复操作" aria-hidden="true">#</a> 添加直接回复操作</h3><p>Android 7.0（API 级别 24）中引入的直接回复操作允许用户直接在通知中输入文本，然后会直接提交给应用，而不必打开 Activity。例如，可以使用直接回复操作让用户从通知内回复短信或更新任务列表。</p><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>直接回复操作在通知中显示为一个额外按钮，可打开文本输入。当用户完成输入后，系统会将文本回复附加到为通知操作指定的 Intent，然后将 Intent 发送到我们的应用。</p><h4 id="添加回复按钮" tabindex="-1"><a class="header-anchor" href="#添加回复按钮" aria-hidden="true">#</a> 添加回复按钮</h4><ol><li>创建一个可添加到通知操作的 RemoteInput.Builder 实例。此类的构造函数接受系统用作文本输入键的字符串。</li></ol><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>
    // Key for the string that&#39;s delivered in the action&#39;s intent.
    private static final String KEY_TEXT_REPLY = &quot;key_text_reply&quot;;

    String replyLabel = getResources().getString(R.string.reply_label);
    RemoteInput remoteInput = new RemoteInput.Builder(KEY_TEXT_REPLY)
            .setLabel(replyLabel)
            .build();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>为回复操作创建 PendingIntent。</li></ol><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>
    // Build a PendingIntent for the reply action to trigger.
    PendingIntent replyPendingIntent =
            PendingIntent.getBroadcast(getApplicationContext(),
                    conversation.getConversationId(),
                    getMessageReplyIntent(conversation.getConversationId()),
                    PendingIntent.FLAG_UPDATE_CURRENT);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果重复使用 PendingIntent，则用户回复的会话可能不是他们所认为的会话。我们必须为每个会话提供一个不同的求代码，或者提供我们对任何其他会话的回复 Intent 调用 equals() 时不会返回 true 的 Intent。会话 ID 会作为 Intent 的 extra 包的一部分被频繁传递，但调用 equals() 时会被忽略。</p><ol start="3"><li>使用 addRemoteInput() 将 RemoteInput 对象附加到操作上。</li></ol><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>    // Create the reply action and add the remote input.
    NotificationCompat.Action action =
            new NotificationCompat.Action.Builder(R.drawable.ic_reply_icon,
                    getString(R.string.label), replyPendingIntent)
                    .addRemoteInput(remoteInput)
                    .build();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>对通知应用操作并发出通知。</li></ol><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>    // Build the notification and add the action.
    Notification newMessageNotification = new Notification.Builder(context, CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_message)
            .setContentTitle(getString(R.string.title))
            .setContentText(getString(R.string.content))
            .addAction(action)
            .build();

    // Issue the notification.
    NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);
    notificationManager.notify(notificationId, newMessageNotification);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="从回复中检索用户输入" tabindex="-1"><a class="header-anchor" href="#从回复中检索用户输入" aria-hidden="true">#</a> 从回复中检索用户输入</h4><p>如需从通知回复界面接收用户输入，调用 RemoteInput.getResultsFromIntent() 并传入 BroadcastReceiver 收到的 Intent：</p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>
    private CharSequence getMessageText(Intent intent) {
        Bundle remoteInput = RemoteInput.getResultsFromIntent(intent);
        if (remoteInput != null) {
            return remoteInput.getCharSequence(KEY_TEXT_REPLY);
        }
        return null;
     }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>处理完文本后，必须使用相同的 ID 和标记（如果使用）调用 NotificationManagerCompat.notify() 来更新通知。若要隐藏直接回复界面并向用户确认他们的回复已收到并得到正确处理，则必须完成该操作。</p><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//在处理这个新通知时，要使用传递给接收者的 onReceive() 方法的上下文context。</span>
    <span class="token comment">// Build a new notification, which informs the user that the system</span>
    <span class="token comment">// handled their interaction with the previous notification.</span>
    <span class="token class-name">Notification</span> repliedNotification <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Notification<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token constant">CHANNEL_ID</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_message<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>replied<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Issue the new notification.</span>
    <span class="token class-name">NotificationManagerCompat</span> notificationManager <span class="token operator">=</span> <span class="token class-name">NotificationManagerCompat</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    notificationManager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span>notificationId<span class="token punctuation">,</span> repliedNotification<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加进度条" tabindex="-1"><a class="header-anchor" href="#添加进度条" aria-hidden="true">#</a> 添加进度条</h3><p>通知可以包含动画形式的进度指示器，向用户显示正在进行的操作的状态。</p><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果可以估算操作在任何时间点的完成进度，应通过调用 setProgress(max, progress, false) 使用指示器的“确定性”形式（如图所示）。第一个参数是“完成”值（如 100）；第二个参数是当前完成的进度，最后一个参数表明这是一个确定性进度条。</p><p>随着操作的继续，持续使用 progress 的更新值调用 setProgress(max, progress, false) 并重新发出通知。</p><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token class-name">NotificationManagerCompat</span> notificationManager <span class="token operator">=</span> <span class="token class-name">NotificationManagerCompat</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CHANNEL_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">&quot;Picture Download&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">&quot;Download in progress&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_notification<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">PRIORITY_LOW</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Issue the initial notification with zero progress</span>
    <span class="token keyword">int</span> <span class="token constant">PROGRESS_MAX</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token constant">PROGRESS_CURRENT</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token constant">PROGRESS_MAX</span><span class="token punctuation">,</span> <span class="token constant">PROGRESS_CURRENT</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    notificationManager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span>notificationId<span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Do the job here that tracks the progress.</span>
    <span class="token comment">// Usually, this should be in a</span>
    <span class="token comment">// worker thread</span>
    <span class="token comment">// To show progress, update PROGRESS_CURRENT and update the notification with:</span>
    <span class="token comment">// builder.setProgress(PROGRESS_MAX, PROGRESS_CURRENT, false);</span>
    <span class="token comment">// notificationManager.notify(notificationId, builder.build());</span>

    <span class="token comment">// When done, update the notification one more time to remove the progress bar</span>
    builder<span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">&quot;Download complete&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    notificationManager<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span>notificationId<span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>tip : 移除进度条，调用 setProgress(0, 0, false)</li></ul><p>如需显示不确定性进度条（不指示完成百分比的进度条），调用 setProgress(0, 0, true)。结果会产生一个与上述进度条样式相同的指示器，区别是这个进度条是一个不指示完成情况的持续动画。在调用 setProgress(0, 0, false) 之前，进度动画会一直运行，调用后系统会更新通知以移除这个通知。</p><h3 id="设置系统范围的类别" tabindex="-1"><a class="header-anchor" href="#设置系统范围的类别" aria-hidden="true">#</a> 设置系统范围的类别</h3><p>Android 使用一些预定义的系统范围类别来确定在用户启用勿扰模式后是否发出指定通知来干扰客户。</p><p>如果通知属于 NotificationCompat 中定义的预定义通知类别之一（例如 CATEGORY_ALARM、CATEGORY_REMINDER、CATEGORY_EVENT 或 CATEGORY_CALL），应通过将相应类别传递到 setCategory() 来进行声明。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CHANNEL_ID</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>notification_icon<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">&quot;My notification&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">PRIORITY_DEFAULT</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setCategory</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">CATEGORY_MESSAGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这一项不是必需操作</li></ul><h3 id="设置锁定屏幕公开范围" tabindex="-1"><a class="header-anchor" href="#设置锁定屏幕公开范围" aria-hidden="true">#</a> 设置锁定屏幕公开范围</h3><p>如需控制锁定屏幕中通知的可见详情级别，调用 setVisibility() 并指定以下值之一：</p><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code>VISIBILITY_PUBLIC 显示通知的完整内容。
VISIBILITY_SECRET 不在锁定屏幕上显示该通知的任何部分。
VISIBILITY_PRIVATE 显示基本信息，例如通知图标和内容标题，但隐藏通知的完整内容。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当设置 VISIBILITY_PRIVATE 时，还可以提供通知内容的备用版本，以隐藏特定详细信息。例如，短信应用可能会显示一条通知，提示“您有 3 条新短信”，但是隐藏了短信内容和发件人。</p><p>如需提供此备用通知，首先像平时一样使用 NotificationCompat.Builder 创建备用通知。然后使用 setPublicVersion() 将备用通知附加到普通通知中。</p><p>但是，对于通知在锁定屏幕上是否可见，用户始终拥有最终控制权，甚至可以根据应用的通知渠道来控制公开范围。</p><ul><li>说白了就是无论我们做应用的怎么设置，用户最后都可以去控制我们应用的这个行为。</li></ul><h3 id="显示紧急消息" tabindex="-1"><a class="header-anchor" href="#显示紧急消息" aria-hidden="true">#</a> 显示紧急消息</h3><p>调用通知时，根据设备的锁定状态，用户会看到以下情况之一：</p><p>如果用户设备被锁定，会显示全屏 Activity，覆盖锁屏。 如果用户设备处于解锁状态，通知以展开形式显示，其中包含用于处理或关闭通知的选项。</p><ul><li>包含全屏 Intent 的通知有很强的干扰性，因此这类通知只能用于最紧急的时效性消息。</li><li>如果应用的目标平台是 Android 10（API 级别 29）或更高版本，必须在应用清单文件中请求 USE_FULL_SCREEN_INTENT 权限，以便系统启动与时效性通知关联的全屏 Activity。</li></ul><p>示例代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token class-name">Intent</span> fullScreenIntent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">ImportantActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PendingIntent</span> fullScreenPendingIntent <span class="token operator">=</span> <span class="token class-name">PendingIntent</span><span class="token punctuation">.</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
            fullScreenIntent<span class="token punctuation">,</span> <span class="token class-name">PendingIntent</span><span class="token punctuation">.</span><span class="token constant">FLAG_UPDATE_CURRENT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NotificationCompat<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token constant">CHANNEL_ID</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSmallIcon</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>notification_icon<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentTitle</span><span class="token punctuation">(</span><span class="token string">&quot;My notification&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPriority</span><span class="token punctuation">(</span><span class="token class-name">NotificationCompat</span><span class="token punctuation">.</span><span class="token constant">PRIORITY_DEFAULT</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFullScreenIntent</span><span class="token punctuation">(</span>fullScreenPendingIntent<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="实践" tabindex="-1"><a class="header-anchor" href="#实践" aria-hidden="true">#</a> 实践</h2><p>即时通讯应用的消息通知（专篇实现，还未写）</p><p>音乐软件应用的消息通知（专篇实现，还未写）</p>`,108),l=[c];function u(d,r){return a(),s("div",null,l)}const v=n(p,[["render",u],["__file","5.html.vue"]]);export{v as default};
