import{_ as i,V as l,W as o,X as n,Y as s,$ as t,Z as e,F as r}from"./framework-bcbeea85.js";const c="/blognext/images/a71.png",d="/blognext/images/a72.png",p={},m=e(`<h1 id="windows下获取aosp源码" tabindex="-1"><a class="header-anchor" href="#windows下获取aosp源码" aria-hidden="true">#</a> Windows下获取AOSP源码</h1><p>确切地说应该是Windows的Linux子系统，此篇文章的前提条件是安装好Windows的Linux子系统</p><h2 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件" aria-hidden="true">#</a> 前提条件:</h2><ol><li>已安装Windows的Linux子系统</li><li>在Windows 中先准备大约400G的存储空间，这里的数字不够确切，空间越大越好 准备工作</li><li>在进行下载代码之前，我们需要准备repo工具，进入Linux子系统，输入以下命令即可</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/bin
<span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=~</span>/bin:<span class="token environment constant">$PATH</span>
<span class="token function">curl</span> https://storage.googleapis.com/git-repo-downloads/repo <span class="token operator">&gt;</span> ~/bin/repo
<span class="token comment">## 如果上述 URL 不可访问，可以用下面的：</span>
<span class="token comment">## curl -sSL  &#39;https://gerrit-googlesource.proxy.ustclug.org/git-repo/+/master/repo?format=TEXT&#39; |base64 -d &gt; ~/bin/repo</span>
<span class="token function">chmod</span> a+x ~/bin/repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>在足够的存储空间内，输入命令，创建googls 文件夹,或者直接在Windows下右键创建该文件夹,这里准备了1T的E盘空间</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入足够的空间目录</span>
<span class="token builtin class-name">cd</span> /mnt/e
<span class="token comment">#创建文件夹</span>
<span class="token function">mkdir</span> googls
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>创建完成后，我们需要确保该文件夹下的文件是区分大小写的状态，以管理员身份运行powershell</li></ol><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token comment"># path 就是googls文件夹的路径，不需要&lt;&gt;这两个符号</span>
<span class="token comment"># 输入以下命令查询该分区是否是区分大小写的状态</span>
fsutil<span class="token punctuation">.</span>exe file queryCaseSensitiveInfo &lt;path&gt;
<span class="token comment"># 如果不是，请输入以下命令，将其设置为区分大小写</span>
fsutil<span class="token punctuation">.</span>exe file setCaseSensitiveInfo &lt;path&gt; enable
<span class="token comment"># 如果不使用了，也可以将其设置回来</span>
fsutil<span class="token punctuation">.</span>exe file setCaseSensitiveInfo &lt;path&gt; disable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下载初始化包" tabindex="-1"><a class="header-anchor" href="#下载初始化包" aria-hidden="true">#</a> 下载初始化包</h2><ol start="6"><li>确保该路径为区分大小写状态后，准备下载AOSP初始化包，注意不要在每个月的1号或者每天凌晨下载，此时镜像正在同步，为了防止与远程代码有较大差异，同步困难，这里建议，在每个月的2-10号进行下载，初始化包每个月1号更新一次</li></ol>`,11),u=n("li",null,"注意，下载的保存路径要放在刚刚创建的googles文件夹下，其他位置也可，但最后要将其进行mv操作，移动到该文件夹下",-1),v={href:"http://iso.mirrors.ustc.edu.cn/aosp-monthly/aosp-latest.tar",target:"_blank",rel:"noopener noreferrer"},b=e(`<h2 id="解压" tabindex="-1"><a class="header-anchor" href="#解压" aria-hidden="true">#</a> 解压</h2><ol start="7"><li>下载完毕后，我们在Linux环境下进入googls文件夹下，进行解压操作</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入对应目录，我这里挂载的是E盘</span>
<span class="token builtin class-name">cd</span> /mnt/e/googls
<span class="token comment">#解压操作，这个过程因电脑的配置不同，解压时间将会有较大差异</span>
<span class="token function">tar</span> <span class="token parameter variable">-xvf</span> aosp-latest.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的解压操作将会等待1-2个小时，甚至更长的时间。</p><p>解压后将会在googls文件夹下出现aosp文件夹，进入此文件夹此时只有 .repo 文件夹</p><ul><li>请不要试图用Windows的工具进行解压操作，这将会导致异常</li></ul><h2 id="同步" tabindex="-1"><a class="header-anchor" href="#同步" aria-hidden="true">#</a> 同步</h2><ol start="8"><li>解压完成后，解压出来的仓库可能存在错误，可以通过命令初始化我们想要指定的仓库 仓库的版本地址可以在这里查看:地址链接，需要科学上网</li></ol><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里我选用了android-13.0.0_r10这个版本，选中指定版本后，输入命令，初始化仓库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 进入代码的.repo/manifests 目录下</span>
<span class="token builtin class-name">cd</span> /mnt/e/googls/aosp/.repo/manifests
<span class="token comment"># reset 操作</span>
<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> remotes/origin/android-13.0.0_r10
<span class="token comment"># 初始化指定版本</span>
repo init <span class="token parameter variable">-u</span> git://mirrors.ustc.edu.cn/aosp/platform/manifest <span class="token parameter variable">-b</span> android-13.0.0_r10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="9"><li>此时代码还未出现，因为并没有操作checkout，参考以下命令，同步代码</li></ol><ul><li>电脑配置不高，建议使用 -j4 参数</li><li>同步代码的操作预计耗时4个小时左右，建议在晚上睡觉前开启同步，清晨醒来后，不出意外的，将会看见同步成功的打印日志</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 不要运用更多的线程进行同步，镜像也只支持最大并发数为5的同步操作</span>
repo <span class="token function">sync</span> <span class="token parameter variable">-j4</span>
<span class="token comment"># 不要使用 repo sync -l，此操作不会同步远程代码，只会checkout本地的代码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此，AOSP代码拉取结束，输入ls -al，将会看见如下图示：</p><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此图为Tabby+ZSH+OH MY ZSH 配置的效果</p>',17);function g(h,k){const a=r("ExternalLinkIcon");return l(),o("div",null,[m,n("ul",null,[u,n("li",null,[s("推荐使用 Internet Download Manager 进行下载："),n("a",v,[s("初始化包下载地址"),t(a)]),s("，支持断点续传 参考速度为：500M带宽，平均速度42M/S，大约半个多小时下载完毕，网速过慢将会延长这一等待时间")])]),b])}const x=i(p,[["render",g],["__file","7.html.vue"]]);export{x as default};
