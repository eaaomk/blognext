import{_ as n,V as s,W as a,Z as t}from"./framework-bcbeea85.js";const e={},p=t(`<h1 id="选择按钮" tabindex="-1"><a class="header-anchor" href="#选择按钮" aria-hidden="true">#</a> 选择按钮</h1><h2 id="checkbox" tabindex="-1"><a class="header-anchor" href="#checkbox" aria-hidden="true">#</a> CheckBox</h2><h3 id="compoundbutton" tabindex="-1"><a class="header-anchor" href="#compoundbutton" aria-hidden="true">#</a> CompoundButton</h3><p>在Android体系中，CompoundButton类是抽象的复合按钮，因为是抽象类，所以不能直接使用。 实际开发中用的是CompoundButton类的几个派生类，主要有复选框CheckBox、单选按钮RadioButton以及开关按钮Switch，这些派生类都可使用CompoundButton的属性和方法。CompoundButton在布局文件中主要使用下面两个属性。</p><div class="language-mk line-numbers-mode" data-ext="mk"><pre class="language-mk"><code>checked：指定按钮的勾选状态，true表示勾选，false表示未勾选。默认未勾选。
button：指定左侧勾选图标的图形。如果不指定就使用系统的默认图标。

# CompoundButton在代码中可使用下列4种方法进行设置。
setChecked：设置按钮的勾选状态。
setButtonDrawable：设置左侧勾选图标的图形。
setOnCheckedChangeListener：设置勾选状态变化的监听器。
isChecked：判断按钮是否勾选。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="checkbox-1" tabindex="-1"><a class="header-anchor" href="#checkbox-1" aria-hidden="true">#</a> CheckBox</h3><p>复选框CheckBox是CompoundButton一个最简单的实现，点击复选框勾选，再次点击取消勾选。 CheckBox通过setOnCheckedChangeListener方法设置勾选监听器，对应的监听器要实现接口CompoundButton.OnCheckedChangeListener。</p><p>代码示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 该页面实现了接口OnCheckedChangeListener，意味着要重写勾选监听器的onCheckedChanged方法</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckBoxActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span>
        <span class="token keyword">implements</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_check_box<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从布局文件中获取名叫ck_system的复选框</span>
        <span class="token class-name">CheckBox</span> ck_system <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>ck_system<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从布局文件中获取名叫ck_custom的复选框</span>
        <span class="token class-name">CheckBox</span> ck_custom <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>ck_custom<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给ck_system设置勾选监听器，一旦用户点击复选框，就触发监听器的onCheckedChanged方法</span>
        ck_system<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给ck_custom设置勾选监听器，一旦用户点击复选框，就触发监听器的onCheckedChanged方法</span>
        ck_custom<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给ck_system设置勾选监听器，一旦用户点击复选框，就触发监听器的onCheckedChanged方法</span>
        <span class="token comment">//ck_system.setOnCheckedChangeListener(new CheckListener());</span>
        <span class="token comment">// 给ck_custom设置勾选监听器，一旦用户点击复选框，就触发监听器的onCheckedChanged方法</span>
        <span class="token comment">//ck_custom.setOnCheckedChangeListener(new CheckListener());</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">CompoundButton</span> buttonView<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> desc <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;您%s了这个CheckBox&quot;</span><span class="token punctuation">,</span> isChecked <span class="token operator">?</span> <span class="token string">&quot;勾选&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;取消勾选&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        buttonView<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>desc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 定义一个勾选监听器，它实现了接口CompoundButton.OnCheckedChangeListener</span>
    <span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">CheckListener</span> <span class="token keyword">implements</span> <span class="token class-name">CompoundButton<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">{</span>
        <span class="token comment">// 在用户点击复选框时触发</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">CompoundButton</span> buttonView<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> desc <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;您勾选了控件%d，状态为%b&quot;</span><span class="token punctuation">,</span> buttonView<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">CheckBoxActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> desc<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_LONG</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> Switch</h2><p>Switch是开关按钮，Android从4.0版本开始支持该控件。其实Switch是一个高级版本的CheckBox，在选中与取消选中时可展现的界面元素比CheckBox丰富。</p><p>Switch新添加的属性和设置方法如下：</p><table><thead><tr><th>XML中的属性</th><th>代码设置的方法</th><th>说明</th></tr></thead><tbody><tr><td>textOn</td><td>setTextOn</td><td>设置开启时的文本</td></tr><tr><td>textOff</td><td>setTextOff</td><td>设置关闭时的文本</td></tr><tr><td>switchPadding</td><td>setSwitchPadding</td><td>设置左右两个开关按钮之间的距离</td></tr><tr><td>thumbTextPadding</td><td>setThumbTextPadding</td><td>设置文本左右两边的距离。如果这个值设置了switchPadding 属性会失效</td></tr><tr><td>thumb</td><td>setThumbDrable/Resource</td><td>设置开关轨道的背景</td></tr><tr><td>track</td><td>setTrackDrable/Resource</td><td>设置开关标识的图标</td></tr></tbody></table><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwitchDefaultActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token keyword">implements</span> <span class="token class-name">OnCheckedChangeListener</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Switch</span> sw_status<span class="token punctuation">;</span> <span class="token comment">// 声明一个开关按钮对象</span>
    <span class="token keyword">private</span> <span class="token class-name">TextView</span> tv_result<span class="token punctuation">;</span> <span class="token comment">// 声明一个文本视图对象</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_switch_default<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从布局文件中获取名叫sw_status的开关按钮</span>
        sw_status <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>sw_status<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从布局文件中获取名叫tv_result的文本视图</span>
        tv_result <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给开关按钮设置选择监听器，一旦用户点击它，就触发监听器的onCheckedChanged方法</span>
        sw_status<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">refreshResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 刷新Switch按钮的开关说明</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 刷新Switch按钮的开关说明</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">refreshResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Switch按钮的状态是%s&quot;</span><span class="token punctuation">,</span>
                <span class="token punctuation">(</span>sw_status<span class="token punctuation">.</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;开&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;关&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tv_result<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 选择事件的处理方法</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">CompoundButton</span> buttonView<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">refreshResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="radiobutton" tabindex="-1"><a class="header-anchor" href="#radiobutton" aria-hidden="true">#</a> RadioButton</h2><p>单选按钮要在一组按钮中选择其中一项，并且不能多选，这要求有个容器确定这组按钮的范围，这个容器便是RadioGroup。</p><p>RadioGroup实质上是个布局，同一组RadioButton都要放在同一个RadioGroup节点下。RadioGroup有orientation属性可指定下级控件的排列方向，该属性为horizontal时，单选按钮在水平方向排列；该属性为vertical时，单选按钮在垂直方向排列。RadioGroup下面除了RadioButton，还可以挂载其他子控件（如TextView、ImageView等）。</p><p>RadioGroup就是一个特殊的线性布局，只不过多了管理单选按钮的功能。下面是RadioGroup常用的3个方法。</p><div class="language-mk line-numbers-mode" data-ext="mk"><pre class="language-mk"><code>check：选中指定资源编号的单选按钮。
getCheckedRadioButtonId：获取选中状态单选按钮的资源编号。
setOnCheckedChangeListener：设置单选按钮勾选变化的监听器。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RadioButton默认未选中，点击后显示选中，但是再次点击不会取消选中。只有点击同组的其他单选按钮时，原来选中的单选按钮才会取消选中。</p><p>另外，单选按钮的选中事件一般不由RadioButton处理，而是由RadioGroup响应。选中事件在实现时，首先要写一个单选监听器实现接口RadioGroup.OnCheckedChangeListener，然后调用RadioGroup对象的setOnCheckedChangeListener方法注册该监听器。</p><ul><li>tip: RadioButton经常会更换按钮图标，如果通过button属性变更图标，那么图标与文字就会挨得很近，为了拉开图标与文字之间的距离，得换成drawableLeft属性展示新图标（不要忘了把button改为@null），此时再设置drawablePadding即可指定间隔距离。</li></ul><div class="language-mk line-numbers-mode" data-ext="mk"><pre class="language-mk"><code>button：主要用于图标大小要求不高，间隔要求也不高的场合。
background：主要用于能够以较大空间显示图标的场合。
drawableLeft：主要用于对图标与文字之间的间隔有要求的场合。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码示例:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 该页面实现了接口OnCheckedChangeListener，意味着要重写选中监听器的onCheckedChanged方法</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RadioHorizontalActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span>
        <span class="token keyword">implements</span> <span class="token class-name">RadioGroup<span class="token punctuation">.</span>OnCheckedChangeListener</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">TextView</span> tv_sex<span class="token punctuation">;</span> <span class="token comment">// 声明一个文本视图对象</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_radio_horizontal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从布局文件中获取名叫tv_sex的文本视图</span>
        tv_sex <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>tv_sex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 从布局文件中获取名叫rg_sex的单选组</span>
        <span class="token class-name">RadioGroup</span> rg_sex <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>rg_sex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置单选监听器，一旦点击组内的单选按钮，就触发监听器的onCheckedChanged方法</span>
        rg_sex<span class="token punctuation">.</span><span class="token function">setOnCheckedChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置单选监听器，一旦点击组内的单选按钮，就触发监听器的onCheckedChanged方法</span>
        <span class="token comment">//rg_sex.setOnCheckedChangeListener(new RadioListener());</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 在用户点击组内的单选按钮时触发</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">RadioGroup</span> group<span class="token punctuation">,</span> <span class="token keyword">int</span> checkedId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>checkedId <span class="token operator">==</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>rb_male<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tv_sex<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;哇哦，你是个帅气的男孩&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>checkedId <span class="token operator">==</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>rb_female<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            tv_sex<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;哇哦，你是个漂亮的女孩&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 定义一个单选监听器，它实现了接口RadioGroup.OnCheckedChangeListener</span>
    <span class="token keyword">class</span> <span class="token class-name">RadioListener</span> <span class="token keyword">implements</span> <span class="token class-name">RadioGroup<span class="token punctuation">.</span>OnCheckedChangeListener</span><span class="token punctuation">{</span>
        <span class="token comment">// 在用户点击组内的单选按钮时触发</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCheckedChanged</span><span class="token punctuation">(</span><span class="token class-name">RadioGroup</span> group<span class="token punctuation">,</span> <span class="token keyword">int</span> checkedId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">RadioHorizontalActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">&quot;您选中了控件&quot;</span><span class="token operator">+</span>checkedId<span class="token punctuation">,</span> <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token constant">LENGTH_LONG</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),c=[p];function o(i,l){return s(),a("div",null,c)}const d=n(e,[["render",o],["__file","3.html.vue"]]);export{d as default};
